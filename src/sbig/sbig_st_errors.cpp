
#include "sbig_st_errors.hpp"
#include "common.hpp"

#include <sbigudrv.h>

const char *SBIGErrorToName(int id) {
  switch (id) {
    ID_AND_NAME(CE_NO_ERROR);
    ID_AND_NAME(CE_CAMERA_NOT_FOUND);
    ID_AND_NAME(CE_EXPOSURE_IN_PROGRESS);
    ID_AND_NAME(CE_NO_EXPOSURE_IN_PROGRESS);
    ID_AND_NAME(CE_UNKNOWN_COMMAND);
    ID_AND_NAME(CE_BAD_CAMERA_COMMAND);
    ID_AND_NAME(CE_BAD_PARAMETER);
    ID_AND_NAME(CE_TX_TIMEOUT);
    ID_AND_NAME(CE_RX_TIMEOUT);
    ID_AND_NAME(CE_NAK_RECEIVED);
    ID_AND_NAME(CE_CAN_RECEIVED);
    ID_AND_NAME(CE_UNKNOWN_RESPONSE);
    ID_AND_NAME(CE_BAD_LENGTH);
    ID_AND_NAME(CE_AD_TIMEOUT);
    ID_AND_NAME(CE_KBD_ESC);
    ID_AND_NAME(CE_CHECKSUM_ERROR);
    ID_AND_NAME(CE_EEPROM_ERROR);
    ID_AND_NAME(CE_SHUTTER_ERROR);
    ID_AND_NAME(CE_UNKNOWN_CAMERA);
    ID_AND_NAME(CE_DRIVER_NOT_FOUND);
    ID_AND_NAME(CE_DRIVER_NOT_OPEN);
    ID_AND_NAME(CE_DRIVER_NOT_CLOSED);
    ID_AND_NAME(CE_SHARE_ERROR);
    ID_AND_NAME(CE_TCE_NOT_FOUND);
    ID_AND_NAME(CE_AO_ERROR);
    ID_AND_NAME(CE_ECP_ERROR);
    ID_AND_NAME(CE_MEMORY_ERROR);
    ID_AND_NAME(CE_DEVICE_NOT_FOUND);
    ID_AND_NAME(CE_DEVICE_NOT_OPEN);
    ID_AND_NAME(CE_DEVICE_NOT_CLOSED);
    ID_AND_NAME(CE_DEVICE_NOT_IMPLEMENTED);
    ID_AND_NAME(CE_DEVICE_DISABLED);
    ID_AND_NAME(CE_OS_ERROR);
    ID_AND_NAME(CE_SOCK_ERROR);
    ID_AND_NAME(CE_SERVER_NOT_FOUND);
    ID_AND_NAME(CE_CFW_ERROR);
    ID_AND_NAME(CE_MF_ERROR);
    ID_AND_NAME(CE_FIRMWARE_ERROR);
    ID_AND_NAME(CE_DIFF_GUIDER_ERROR);
    ID_AND_NAME(CE_RIPPLE_CORRECTION_ERROR);
    ID_AND_NAME(CE_EZUSB_RESET);
    ID_AND_NAME(CE_NEXT_ERROR);
  default : return NULL;
  }
}
